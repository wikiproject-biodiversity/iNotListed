name: Run Script on Issue Form Submission

on:
  issues:
    types: [opened]

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install requests tqdm matplotlib

      - name: Parse issue and extract parameters
        id: parse-issue
        run: |
          ISSUE_BODY="${{ github.event.issue.body }}"
          echo "$ISSUE_BODY" > issue_content.txt

          # Helper function to extract a field robustly
          extract_field() {
              local field="$1"
              echo "$ISSUE_BODY" | awk -v f="$field" '
                  BEGIN { capture=0 }
                  $0 ~ "### üîπ "f { capture=1; next }
                  capture && $0 ~ /^###/ { capture=0 }
                  capture { gsub(/^[ \t]+|[ \t]+$/,""); print }
              ' | head -n1
          }

          USERNAME=$(extract_field "iNaturalist Username")
          PROJECT_ID=$(extract_field "iNaturalist Project ID")
          COUNTRY_CODE=$(extract_field "iNaturalist Country/Place ID")

          # Extract languages robustly (checkboxes)
          LANGUAGES=$(echo "$ISSUE_BODY" | awk '
              BEGIN { capture=0 }
              /^### üåê Wikipedia Languages to Include/ { capture=1; next }
              capture && /^###/ { capture=0 }
              capture && /^\- \[x\]/ { print $2 }
          ' | paste -sd "," -)

          # Export to GitHub environment
          echo "username=$USERNAME" >> $GITHUB_ENV
          echo "project_id=$PROJECT_ID" >> $GITHUB_ENV
          echo "country_code=$COUNTRY_CODE" >> $GITHUB_ENV
          echo "languages=$LANGUAGES" >> $GITHUB_ENV

          # Debug
          echo "Parsed values:"
          echo "username='$USERNAME'"
          echo "project_id='$PROJECT_ID'"
          echo "country_code='$COUNTRY_CODE'"
          echo "languages='$LANGUAGES'"

      - name: Run iNotWiki.py and capture report path
        run: |
          ISSUE_FOLDER="reports/issue-${{ github.event.issue.number }}"
          mkdir -p "$ISSUE_FOLDER"

          if [[ -n "$username" ]]; then
              REPORT_PATH=$(python iNotWiki.py --username "$username" --languages "$languages" --output-folder "$ISSUE_FOLDER")
          elif [[ -n "$project_id" ]]; then
              REPORT_PATH=$(python iNotWiki.py --project_id "$project_id" --languages "$languages" --output-folder "$ISSUE_FOLDER")
          elif [[ -n "$country_code" ]]; then
              REPORT_PATH=$(python iNotWiki.py --country_id "$country_code" --languages "$languages" --output-folder "$ISSUE_FOLDER")
          else
              DEFAULT_PROJECT_ID="biohackathon-2025"
              REPORT_PATH=$(python iNotWiki.py --project_id "$DEFAULT_PROJECT_ID" --languages "$languages" --output-folder "$ISSUE_FOLDER")
          fi

          echo "REPORT_PATH=$REPORT_PATH" >> $GITHUB_ENV

      - name: Upload generated report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: missing-wikipedia-report
          path: reports/issue-${{ github.event.issue.number }}/

      - name: Commit report folder to repository
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add reports/issue-${{ github.event.issue.number }}
          git commit -m "Add report for issue #${{ github.event.issue.number }}" || echo "No changes to commit"
          git push

      - name: Post Markdown report as issue comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -f "$REPORT_PATH" ]; then
            COMMENT_BODY=$(cat "$REPORT_PATH" | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
            curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments \
              -d "{\"body\": \"$COMMENT_BODY\"}"
          else
            echo "‚ùå No report file found. Skipping comment."
          fi
