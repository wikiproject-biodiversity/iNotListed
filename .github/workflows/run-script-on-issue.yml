name: Run Script on Issue Form Submission

on:
  issues:
    types:
      - opened

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install requests tqdm wikidataintegrator

      - name: Parse issue and extract parameters
        id: parse-issue
        run: |
          echo "Extracting issue details..."
          ISSUE_BODY="${{ github.event.issue.body }}"
          echo "$ISSUE_BODY" > issue_content.txt
      
          # Extract values by handling Markdown formatting
          USERNAME=$(echo "$ISSUE_BODY" | sed -n '/^### üîπ iNaturalist Username/,/^###/p' | sed '1d;$d' | tr -d '\r' | xargs)
          PROJECT_ID=$(echo "$ISSUE_BODY" | sed -n '/^### üîπ iNaturalist Project ID/,/^###/p' | sed '1d;$d' | tr -d '\r' | xargs)
          COUNTRY_CODE=$(echo "$ISSUE_BODY" | sed -n '/^### üîπ iNaturalist Country\/Place ID/,/^###/p' | sed '1d;$d' | tr -d '\r' | xargs)
      
          # Ignore "_No response_" values
          if [[ "$USERNAME" == "_No response_" ]]; then USERNAME=""; fi
          if [[ "$PROJECT_ID" == "_No response_" ]]; then PROJECT_ID=""; fi
          if [[ "$COUNTRY_CODE" == "_No response_" ]]; then COUNTRY_CODE=""; fi
      
          # Debug output
          echo "Extracted Username: $USERNAME"
          echo "Extracted Project ID: $PROJECT_ID"
          echo "Extracted Country Code: $COUNTRY_CODE"
      
          # Set GitHub Actions environment variables
          echo "username=$USERNAME" >> $GITHUB_ENV
          echo "project_id=$PROJECT_ID" >> $GITHUB_ENV
          echo "country_code=$COUNTRY_CODE" >> $GITHUB_ENV

      - name: Run the script
        run: |
          REPORT_FILE=""
          
          if [[ -n "$username" ]]; then
            python iNotWiki.py user "$username"
            REPORT_FILE="suggestions/missing_wikipedia_user_${username}.md"
          elif [[ -n "$project_id" ]]; then
            python iNotWiki.py project "$project_id"
            REPORT_FILE="suggestions/missing_wikipedia_project_${project_id}.md"
          elif [[ -n "$country_code" ]]; then
            python iNotWiki.py country "$country_code"
            REPORT_FILE="suggestions/missing_wikipedia_country_${country_code}.md"
          else
            echo "No valid parameters found in the issue. Exiting..."
            exit 1
          fi
          
          # Debug output
          echo "Generated report file: $REPORT_FILE"
          
          # Store REPORT_FILE for later steps
          echo "REPORT_FILE=$REPORT_FILE" >> $GITHUB_ENV

      - name: Upload generated markdown report
        uses: actions/upload-artifact@v4
        with:
          name: missing-wikipedia-report
          path: suggestions/

      - name: Read Markdown File and Post Comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -f "$REPORT_FILE" ]; then
            # Read and escape Markdown content
            COMMENT_BODY=$(cat "$REPORT_FILE" | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')

            # Post the comment
            curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments \
              -d "{\"body\": \"$COMMENT_BODY\"}"
          else
            echo "‚ùå No report file found. Skipping comment."
          fi
